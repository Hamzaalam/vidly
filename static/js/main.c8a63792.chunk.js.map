{"version":3,"sources":["services/fakeMovieService.js","components/common/like.jsx","components/common/pagination.jsx","components/movies.jsx","utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","liked","Like","props","classes","react_default","a","createElement","style","cursor","onClick","className","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","map","page","key","Movies","state","renderMovies","handleDelete","movie","_this","filter","m","setState","handleLike","Object","toConsumableArray","index","indexOf","objectSpread","handlePageChange","_this2","this","count","length","_this$state","items","pageNumber","startIndex","console","log","slice","take","value","paginate","like","pagination","Component","App","components_movies","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8a63792.chunk.js","sourcesContent":["import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\n\nconst Like = (props) => {\n    let classes = \"\";\n    props.liked === true ? classes=\"fas fa-heart\" : classes=\"far fa-heart\";\n    return ( \n            <i  style={{cursor:'pointer'}} \n                onClick={props.onClick} \n                className={classes}>\n            </i>\n            );\n}\n \nexport default Like;","import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst Pagination = (props) => {\n  const {itemsCount, pageSize,currentPage, onPageChange} = props;\n\n  const  pagesCount = Math.ceil(itemsCount/pageSize);\n  if(pagesCount===1) return null;\n \n  const pages = _.range(1,pagesCount+1);\n\n  return ( <nav>\n              <ul className=\"pagination\">\n                {pages.map(page =>\n                  <li key={page} className={currentPage===page ? \"page-item active\": \"page-item\"}>\n                    <a className=\"page-link\"\n                       onClick={()=>onPageChange(page)}\n                    >\n                    {page}\n                    </a>\n                </li>\n                )}\n              </ul>\n          </nav>\n        );\n}\nPagination.propTypes ={\n  itemsCount: PropTypes.number.isRequired, \n  pageSize:PropTypes.number.isRequired,\n  currentPage:PropTypes.number.isRequired, \n  onPageChange:PropTypes.func.isRequired\n}\n  \nexport default Pagination;","import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Like from \"./common/like\"\nimport Pagination from \"./common/pagination\";\nimport {paginate} from \"../utils/paginate\"\n\nclass Movies extends Component {\n  state = {\n    movies: getMovies(),\n    currentPage: 1,\n    pageSize: 4\n  };\n\n  renderMovies = () => {};\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n  };\n  handleLike = movie =>{\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = {...movies[index]};\n    movies[index].liked = !movies[index].liked;\n    this.setState({movies})\n  };\n\n  handlePageChange = page => {\n  this.setState({currentPage:page})\n  };\n  \n  render() {\n    const { length: count } = this.state.movies;\n    const { currentPage, pageSize , movies: allMovies } =this.state;\n    const movies = paginate(allMovies,pageSize,currentPage)\n\n    if (count === 0)\n      return <p>There are no movies to display comeback later</p>;\n    return (\n      <div>\n        <p>Showing {count} movie in the database</p>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>tittle</th>\n              <th>Genre</th>\n              <th>Stock</th>\n              <th>Rate</th>\n              <th />\n              <th />\n            </tr>\n          </thead>\n          <tbody>\n            {movies.map(movie => (\n              <tr key={movie._id}>\n                <td>{movie.title}</td>\n                <td>{movie.genre.name}</td>\n                <td>{movie.numberInStock}</td>\n                <td>{movie.dailyRentalRate}</td>\n                <td>\n                  <Like onClick={() =>this.handleLike(movie)}\n                        liked={movie.liked}\n                        \n                  />\n                </td>\n                <td>\n                  <button\n                    onClick={() => this.handleDelete(movie)}\n                    className=\"btn btn-danger btn-sm\"\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <Pagination\n                  itemsCount={count}\n                  currentPage = {currentPage}\n                  pageSize={pageSize}\n                  onPageChange={this.handlePageChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from 'lodash';\n\nexport function paginate (items, pageSize , pageNumber){\n    const startIndex = (pageNumber - 1) * pageSize;\n    console.log(startIndex)\n    return _(items).slice(startIndex).take(pageSize).value();\n}","import React from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/movies\";\n\nfunction App() {\n  return (\n    <main className=\"container\">\n      <Movies />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}